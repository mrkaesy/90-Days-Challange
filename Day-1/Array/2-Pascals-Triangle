In Pascal’s triangle, each number is the sum of the two numbers directly above it as shown in the figure below:

https://lh5.googleusercontent.com/SGqPaM5UefpH-NP2uVMvPGu2XpdlRSgesdFQEP_W_6v5rbdw8S0gKXKgi0NIGtY5xjoHlLDEtgc7ICZN8PQDzpr2RPG1ebLqj_gzN_K2gQqZn3ju8dz0WSccoZnTzid22-j-_SJq=s1600In Pascal’s triangle, each number is the sum of the two numbers directly above it as shown in the figure below:

Input Format: N = 5

Result:
    1
   1 1
  1 2 1
 1 3 3 1
1 4 6 4 1

Explanation: There are 5 rows in the output matrix. Each row corresponds to each one of the rows in the image shown above.

Solution:
#include <bits/stdc++.h>
vector<vector<long long int>> printPascal(int n) 
{
  //Write your code here.
  // calx(n);
  // cout<<n<<endl;
  vector<vector<long long int>> x(n);
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<=i;j++)
    {
      x[i].push_back(0);
    }
  }
  if(n==1)
  {
    
    x[0][0]=1;
    
    return x;
    
    
  }
  if(n==2)
  {
    x[0][0]=1;
    x[1][0]=1;
    x[1][1]=1;
    return x;

  }
  if(n==3)
  {
    x[0][0]=1;
    x[1][0]=1;
    x[1][1]=1;
    x[2][0]=1;
    x[2][2]=1;
    x[2][1]=2;
    return x;

  }

  for(int i=0;i<n;i++)
  {
    
    for(int j=0;j<=i;j++)
    {
    
        x[i][0] = 1;
        x[i][i] = 1;
        
      if(i>=1 && j!=i){
        x[i][j]=x[i-1][j];
        if(j-1>=0)
        {
          x[i][j]+=x[i-1][j-1];
        }
      }
    }
  }
  return x;
}

int main(){
  int T;
  cin>>T;
  while(T--)
  {
  int n;
  cin>>n;
  vector<vector<long long int>> pascal=printPascal(n);
  for(int i=0;i<n;i++)
  {
  for(int j=0;j<=i;i++)
  {
  cout<<pascal[i][j]<<" " ;
  }
  cout<<endl;
  }
  
  
  }
  return 0;
}
